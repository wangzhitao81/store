@model CRModel.Models.OrderModel
@using CRModel.Models;
@{
    ViewBag.Title = "NewOrder";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ContractModel CurrentContract = ViewBag.UserContract;
}
<div class="jumbotron-header">
    <span style="font-size:30px; color: #34A387">@Resources.Resources.NewOrderTitle</span>
</div>
<div class="container body-content">
    @using (Html.BeginForm("NewOrder", "Order", FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "orderform" }))
    {
        @Html.HiddenFor(m => m.HiddenDefaultLanguage)
        @Html.Hidden("HiddenSelectedLanguage")
        @Html.HiddenFor(m => m.CustomerProfileNO)
        @Html.HiddenFor(m => m.DeliverDate)
        @Html.HiddenFor(m => m.Fee)
        <div class="form-group">
            <label for="CustomerReportNO" class="col-sm-2 control-label">@Resources.Resources.CustomReportNO</label>
            <div class="col-sm-10">
                <input type="text" name="CustomerReportNO" id="CustomerReportNO" class="form-control" placeholder='@Resources.Resources.CustomReportNO'>
            </div>
        </div>
        <div class="form-group">
            <label for="RegisterNo" class="col-sm-2 control-label">@Resources.Resources.RegisterNO</label>
            <div class="col-sm-10">
                <input type="text" name="RegisterNo" id="RegisterNo" class="form-control" onblur="CheckRegisterNo();" placeholder='@Resources.Resources.RegisterNO'>
            </div>
        </div>
        <div class="form-group">
            <label for="ENName" class="col-sm-2 control-label">
                @Resources.Resources.EnterpriseName<span style="color:red;">*</span>
            </label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.ENName, new { @class = "form-control", placeholder = Resources.Resources.EnterpriseName })
                @Html.ValidationMessageFor(m => m.ENName, Resources.Resources.InputEnterpriseName)
            </div>
        </div>
        <div class="form-group">
            <label for="SuppliedAddress" class="col-sm-2 control-label">@Resources.Resources.SupplyAddress</label>
            <div class="col-sm-10">
                @Html.TextBoxFor(m => m.SuppliedAddress, new { @class = "form-control", placeholder = Resources.Resources.SupplyAddress })
                @Html.ValidationMessageFor(m => m.SuppliedAddress, Resources.Resources.InputSupplyAddress)
            </div>
        </div>
        <div class="form-group">
            <label for="NationCode" class="col-sm-2 control-label">
                @Resources.Resources.Nation
            </label>
            @{
        List<SelectListItem> items = new List<SelectListItem>();
        foreach (string temp in (IEnumerable<string>)ViewBag.NationCodeDic.Keys)
        {
            if (temp == "中国")
            {
                items.Add(new SelectListItem() { Text = temp, Value = ViewBag.NationCodeDic[temp], Selected = true });
            }
            else
            {
                items.Add(new SelectListItem() { Text = temp, Value = ViewBag.NationCodeDic[temp] });
            }
        }
            }
            <div class="col-sm-10">
                @Html.DropDownListFor(m => m.NationCode, (IEnumerable<SelectListItem>)items, new { @class = "form-control", placeholder = Resources.Resources.Nation, onchange = "InitReportStatus();" })
                @Html.ValidationMessageFor(m => m.NationCode, Resources.Resources.InputNation)
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">@Resources.Resources.ReportType</label>
            <div class="col-sm-10">
                @foreach (var dic in ViewBag.ReportTypeDic)
                {
                    <label class="radio-inline">
                        <input name="ReportType" type="radio" value="@dic.Code" onclick="SetReportTypeValue('@dic.Name');" />
                        @dic.Name
                    </label>
                }
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">@Resources.Resources.IsUrgent</label>
            <div class="col-sm-10">
                @foreach (var dic in ViewBag.ExpressTypeDic)
                {
                    <label class="radio-inline">
                        <input name="ExpressType" type="radio" value="@dic.Code" displayname="@dic.Name" onclick="SetExpressTypeValue('@dic.Code');" />
                        @dic.Name
                    </label>
                }
            </div>
        </div>
        <div class="form-group">
            <label class="col-sm-2 control-label">@Resources.Resources.TranslationLang</label>
            <div class="col-sm-10">
                @foreach (var dic in ViewBag.LanguageDic)
                {
                    <label class="checkbox-inline">
                        <input name="TranslationLanguage" type="checkbox" value="@dic.Code" displayname="@dic.Name" onclick="SetTranslationLanguage(this,'@dic.Name')" />
                        @dic.Name
                    </label>
                }
            </div>
        </div>
        <div class="form-group">
            <label for="Remarks" class="col-sm-2 control-label">@Resources.Resources.Remark</label>
            <div class="col-sm-10">
                @Html.TextAreaFor(m => m.Remarks, new { @class = "form-control", rows = "3" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-1">
                <input type="button" onclick="SubmitOrderform();" class="btn btn-default" value="委托" />
            </div>
        </div>
    }
</div>
<script type="text/javascript">
    var LanguageShowList = [];
    var LanguageShowValue = [];
    var ReportViewType = "";
    var UserContract = "";
    var DeliverData = "";

    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetUserContract", "Order")',
            type: "POST",
            dataType: "json",
            async: false,
            data: { username: $("#inputUserName").val() },
            success: function (data) {
                UserContract = data;
            },
            error: function (date) {
                alert('@Resources.Resources.GetContractErrorMsg');
                window.location.href = '@Url.Action("Index","Home")';
            }
        });
        InitReportStatus(UserContract);
    });

    function GetDeliverDataandFee() {
        $.ajax({
            url: '@Url.Action("GetDataandFee", "Order")',
            type: "GET",
            dataType: "json",
            cache: false,
            async: false,
            data: {
                nationcode: $("#NationCode").val(),
                expresstype: $("[name=ExpressType]").val(),
                reporttype: $('input[type=radio]').serializeArray()[0].value,
                selectedlang: LanguageShowValue.toString()
            },
            success: function (data) {
                DeliverData = data;
                $("#DeliverDate").val(data[0]);
                $("#Fee").val(data[1]);
                $("#spanDeliverDate_v").html(data[0]);
                $("#spanFee_v").html(data[1]);
            },
            error: function (date) {
                alert('@Resources.Resources.GetContractErrorMsg');
                return false;
            }
        });
    }

    function InitReportStatus(contractdata) {
        if (!contractdata) {
            contractdata = UserContract;
        }
        var tempContractDetail = $(contractdata.ContractDetails).filter(function (index) {
            return contractdata.ContractDetails[index].NationCode == $("#NationCode").val();
        });
        var defaultselectedtype = tempContractDetail[0].ReportType;
        var defaultlanguage = tempContractDetail[0].DefaultLanguage;
        DisableNotUseReportType(tempContractDetail);
        ResetLanguage();
        $("#HiddenDefaultLanguage").val(defaultlanguage);
        $("#CustomerProfileNO").val(UserContract.CustomerProfileNO);

        var str2 = "[name=\"ReportType\"][value=\"" + defaultselectedtype + "\"]";
        $("#orderform").find(str2).click();
        var langArray = defaultlanguage.split(',');
        $(langArray).each(function (key, value) {
            var str1 = "[name=\"TranslationLanguage\"][value=\"" + langArray[key] + "\"]";
            $("#orderform").find(str1).click();
            $("#orderform").find(str1).attr('disabled', true);
        });
        CheckUrgent();
    }

    function ResetLanguage() {
        $("[name=TranslationLanguage]").each(function (key, value) {
            $(value).attr('disabled', false);
            document.getElementsByName("TranslationLanguage")[key].checked = false;
        });
    }

    function DisableNotUseReportType(usedContractDetails) {
        var reporttype = [];
        var reporttypeArray = "";
        $(usedContractDetails).each(function (key, value) {
            if ($.inArray(value.ReportType, reporttype) == -1) {
                reporttype.push(value.ReportType);
            }
        });
        $("[name='ReportType']").each(function (key, value) {
            $("[value='" + value.value + "']").attr('disabled', true);
        });
        reporttypeArray = reporttype.toString().split(',');
        $(reporttypeArray).each(function (key, value) {
            var temp = "[name=\"ReportType\"][value=\"" + value + "\"]";
            $("#orderform").find(temp).attr('disabled', false);
        });
    }

    function DisableExpressType() {
        $("[name=ExpressType]").each(function (key, value) {
            $(value).attr('disabled', true);
        });
    }

    function CheckUrgent() {
        DisableExpressType();
        var selectedReportType = "";
        for (var i = 0; i < document.getElementsByName("ReportType").length; i++) {
            if (document.getElementsByName("ReportType")[i].checked) {
                selectedReportType = document.getElementsByName("ReportType")[i].value;
            }
        }
        $.ajax({
            url: '@Url.Action("CheckUrgent", "Order")',
            type: "GET",
            dataType: "json",
            cache: false,
            async: false,
            data: {
                nationcode: $("#NationCode").val(),
                reporttype: selectedReportType,
            },
            success: function (data) {
                $($("#orderform").find('[name="ExpressType"]')[0]).attr("disabled", false);
                $($("#orderform").find('[name="ExpressType"]')[0]).click();
                if (data.Urgent == true) {
                    $($("#orderform").find('[name="ExpressType"]')[1]).attr("disabled", false);
                }
                if (data.Express == true) {
                    $($("#orderform").find('[name="ExpressType"]')[2]).attr("disabled", false);
                }
            },
            error: function (date) {
                alert('@Resources.Resources.GetContractErrorMsg');
                return false;
            }
        });
    }

    function SetReportTypeValue(value) {
        ReportViewType = value;
        CheckUrgent();
    }

    function SetExpressTypeValue(value) {
        $("[name=ExpressType]").val(value);
    }

    function SetTranslationLanguage(obj, value) {
        $("[name=TranslationLanguage]").each(function (key, value) {
            if (document.getElementsByName('TranslationLanguage')[key].checked) {
                if ($.inArray($(value).attr('displayname'), LanguageShowList) == -1) {
                    LanguageShowList.push($(value).attr('displayname'));
                }
                if ($.inArray($(value).attr('value'), LanguageShowValue) == -1) {
                    LanguageShowValue.push($(value).attr('value'));
                }
            }
            else {
                LanguageShowList = $(LanguageShowList).removeItem(LanguageShowList, $(value).attr('displayname'));
                LanguageShowValue = $(LanguageShowValue).removeItem(LanguageShowValue, $(value).attr('value'));
            }
        });
    }

    function SubmitOrderform() {
        if (CheckCustomerReportNO()) {
            return false;
        }
        if ($("#orderform").valid()) {
            CollectionData();
            $("#MyPopUpModal").modal('toggle');
        }
    }

    function CheckCustomerReportNO() {
        var exist = false;
        if ($("#CustomerReportNO").val() == "") {
            return exist;
        }
        $.ajax({
            url: '@Url.Action("CheckCustomerReportNO", "Order")',
            type: "GET",
            cache: false,
            async: false,
            data: {
                cusreportno: $("#CustomerReportNO").val()
            },
            success: function (data) {
                if (data == "Exist") {
                    exist = true;
                }
            },
            error: function (date) {
                exist = true;
            }
        });
        if (exist == true) {
            alert('@Resources.Resources.CustomerRerportNOExist');
        }
        return exist;
    }

    function CollectionData() {
        $("#spanCustomerReportNO_v").html($("#CustomerReportNO").val());
        $("#spanRegisterNo_v").html($("#RegisterNo").val());
        //$("#spanEnterpriseSuppliedName_v").html($("#EnterpriseSuppliedName").val());
        $("#spanENName_v").html($("#ENName").val());
        $("#spanSuppliedAddress_v").html($("#SuppliedAddress").val());
        $("#spanReportType_v").html(ReportViewType);
        var expresstype = $("[name=ExpressType]").val();
        switch (expresstype) {
            case "Common":
                expresstype = "普通件";
                break;
            case "Urgent":
                expresstype = "加急件";
                break;
            case "Express":
                expresstype = "特急件";
                break;
        }
        $("#spanExpressType_v").html(expresstype.toString());
        //var interview = $("#NeedInterview").val();
        //if (interview == "True" || interview == "true" || interview == true) {
        //    interview = "需要";
        //}
        //else {
        //    interview = "不需要";
        //}
        //$("#spanNeedInterview_v").html(interview.toString());
        $("#spanTranslationLanguage_v").html(LanguageShowList.toString());
        $("#spanRemarks_v").html($("#Remarks").val());
        var templang = "";
        $("[name=TranslationLanguage]").each(function (key, value) {
            if (document.getElementsByName('TranslationLanguage')[key].checked) {
                templang = templang + $(value).val() + ",";
            }
        });
        templang = templang.substring(0, templang.length - 1);
        $("#HiddenSelectedLanguage").val(templang);
        GetDeliverDataandFee();
    }

    var isClicked = false;
    function RealSubmit() {
        if (!isClicked) {
            $('#orderform').submit();
        }
        isClicked = true;
    }
</script>
<script type="text/javascript">
    function CheckRegisterNo() {
        var v1 = document.getElementById("RegisterNo").value.trim();
        if (v1.length > 15) {
            alert("输入的工商注册号不正确，请核实后输入！");
            return false;
        }
        else if (v1.length == 15) {
            var re = /^\d{15}$/;
            if (!re.exec(v1)) {
                alert("工商注册号类型不对，请核实录入！");
                return false;
            } else {
                var s = 0, ss = 0, y = 0, sx = 0;
                for (var i = 0; i < 15; i++) {
                    if (i == 0) {
                        s = parseInt(v1.slice(i, i + 1)) + 10;
                    }
                    else if (i > 0 && i < 14) {
                        s = parseInt(v1.slice(i, i + 1)) + y;
                    }
                    else {
                        if ((11 - y) >= 10) {
                            sx = 11 - y - 10;
                        }
                        else {
                            sx = 11 - y;
                        }
                        if (parseInt(v1.slice(i, i + 1)) == sx) {
                            return true;
                        }
                        else {
                            alert('此注册号不符合校验规则，待渠道人员审核！');
                            return false;
                        }
                    }
                    if ((s % 10) == 0) {
                        ss = 20;
                    }
                    else {
                        ss = (s % 10) * 2;
                    }
                    y = ss % 11;
                }

            }
        }
        else if (v1.length < 15 && v1.length > 0) {
            if (!confirm('特殊工商注册号，请再次核对确认！')) {
                return false;
            }
        }
    }
</script>

<div class="modal fade" id="MyPopUpModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-4" id="spanCustomerReportNO">@Resources.Resources.CustomReportNO : </div>
                    <div class="col-sm-8" id="spanCustomerReportNO_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanRegisterNo">@Resources.Resources.RegisterNO : </div>
                    <div class="col-sm-8" id="spanRegisterNo_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanENName">@Resources.Resources.EnterpriseName : </div>
                    <div class="col-sm-8" id="spanENName_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanSuppliedAddress">@Resources.Resources.SupplyAddress : </div>
                    <div class="col-sm-8" id="spanSuppliedAddress_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanReportType">@Resources.Resources.ReportType : </div>
                    <div class="col-sm-8" id="spanReportType_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanExpressType">@Resources.Resources.IsUrgent : </div>
                    <div class="col-sm-8" id="spanExpressType_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanTranslationLanguage">@Resources.Resources.TranslationLang : </div>
                    <div class="col-sm-8" id="spanTranslationLanguage_v"></div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanDeliverDate">@Resources.Resources.EstimateTime : </div>
                    <div class="col-sm-8" id="spanDeliverDate_v">2014-06-11</div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanFee">@Resources.Resources.Fee : </div>
                    <div class="col-sm-8" id="spanFee_v">3000.00</div>
                </div>
                <div class="row">
                    <div class="col-sm-4" id="spanRemarks">@Resources.Resources.Remark : </div>
                    <div class="col-sm-8" id="spanRemarks_v"></div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">@Resources.Resources.Return</button>
                <button type="button" onclick="RealSubmit();" class="btn btn-primary">@Resources.Resources.Deal</button>
            </div>
        </div>
    </div>
</div>