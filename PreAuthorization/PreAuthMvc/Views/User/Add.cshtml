@model PreAuthMvc.Models.UserViewModel
@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_ContentLayout.cshtml";
}
<div class="right_content">
    <input type="hidden" id="sessionUUID" name="sessionUUID" value='@ViewData["sessionUUID"]'>
    @using (Html.BeginForm()) { 
            <div class="list_header">
                用户管理
                <div class="top_m_l"></div>
                <div class="top_m_r"></div>
            </div>
            <input type="hidden" value="admin" name="adminUserName" id="adminUserName">
            <table cellspacing="0" cellpadding="0" width="100%" border="0" class="t-form">
                <tbody>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.UserCode) </td>
                        <td>
                            <input type="hidden" value=@Html.ValueFor(model => model.Id) name="recordId" id="recordId">
                            <input type="text" maxlength="20" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.UserCode)' name="UserCode" id="UserCode">
                            <span class="red_mark">*</span><span id="UserCodeTip"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.UserName) </td>
                        <td>
                            <input type="text" maxlength="20" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.UserName)' name="UserName" id="UserName">
                            <span class="red_mark">*</span><span id="UserNameTip"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.Password) </td>
                        <td>
                            <input type="password" maxlength="20" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.Password)' name="Password" id="Password">
                            <span class="red_mark">*</span><span id="PasswordTip"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.PasswordConfirm) </td>
                        <td>
                            <input type="password" maxlength="20" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.PasswordConfirm)' name="PasswordConfirm" id="PasswordConfirm">
                            <span class="red_mark">*</span><span id="PasswordConfirmTip"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.AgencyCode) </td>
                        <td>
                            @Html.DropDownListFor(model => model.AgencyCode, ViewData["agencyList"] as IList<SelectListItem>)
                            <span class="red_mark">*</span><span id="AgencyCodeTip"></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="lbl">@Html.LabelFor(model => model.RoleCode) </td>
                        <td>
                            @Html.DropDownListFor(model => model.RoleCode, ViewData["roleList"] as IList<SelectListItem>)
                            <span class="red_mark">*</span><span id="RoleCodeTip"></span>
                        </td>
                    </tr>
                </tbody>

            </table>
            <div class="btn_line">
                <input type="button" id="okBtn" value="确定" class="btn_blue" />
                <input type="button" id="cancelBtn" value="取消" class="btn_gray" />
            </div>
    }

</div>
<script type="text/javascript">
    upms.history.go("cancelBtn");// 取消按钮
    upms.handlebtn.submit({// 确定batch
        btnid: "okBtn",
        url: '@Url.Action("SubmitAdd", "User")',
        params: [
                { name: "recordId", targetid: "recordId", type: "text" },
                { name: "UserCode", targetid: "UserCode", type: "text" },
                { name: "UserName", targetid: "UserName", type: "text" },
                { name: "RoleCode", targetid: "RoleCode", type: "select" },
                { name: "AgencyCode", targetid: "AgencyCode", type: "select" },
                { name: "Password", targetid: "Password", type: "text" },
                { name: "PasswordConfirm", targetid: "PasswordConfirm", type: "text" }
                //{ name: "userAuth", targetname: "userAuth", type: "checkbox" }
        ],
        validate: {
            model: "batch",
            params: [
                {
                    targetid: "UserCode", type: "text", infoid: "UserCodeTip", checkarray: [{ falsetip: "用户编码不能为空!", oncheck: upms.checkUtils.isNotEmptyStr }]
                },
                { targetid: "UserName", type: "text", infoid: "UserNameTip", falsetip: "用户姓名不能为空!", oncheck: upms.checkUtils.isNotEmptyStr },
                { targetid: "Password", type: "text", infoid: "PasswordTip", falsetip: "密码不能为空!", oncheck: upms.checkUtils.isNotEmptyStr }
            ]
        }
    });
</script>
