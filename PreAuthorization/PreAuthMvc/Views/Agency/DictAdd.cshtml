@model PreAuthMvc.Models.DictItemViewModel
@{
    ViewBag.Title = "DictAdd";
    Layout = "~/Views/Shared/_ContentLayout.cshtml";
}
<div class="right_content">
    <input type="hidden" id="sessionUUID" name="sessionUUID" value='@ViewData["sessionUUID"]'>
    @using (Html.BeginForm())
    {
        <div class="list_header">
            字典管理
            <div class="top_m_l"></div>
            <div class="top_m_r"></div>
        </div>
        <input type="hidden" value=@ViewData["usrId"] name="usrId" id="usrId">
        <input type="hidden" value=@ViewData["adminUserName"] name="adminUserName" id="adminUserName">
        <table cellspacing="0" cellpadding="0" width="100%" border="0" class="t-form">
            <tbody>
                <tr>
                    <td class="lbl">@Html.LabelFor(model => model.ItemCode) </td>
                    <td>
                        <input type="hidden" value=@Html.ValueFor(model => model.Id) name="recordId" id="recordId">
                        <input type="text" maxlength="20" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.ItemCode)' name="ItemCode" id="ItemCode">
                        <span class="red_mark">*</span><span id="ItemCodeTip"></span>
                    </td>
                    <td class="lbl">@Html.LabelFor(model => model.ItemName) </td>
                    <td>
                        <input type="text" maxlength="50" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.ItemName)' name="ItemName" id="ItemName">
                        <span class="red_mark">*</span><span id="ItemNameTip"></span>

                    </td>
                </tr>
                <tr>
                    <td class="lbl">@Html.LabelFor(model => model.ItemType) </td>
                    <td>
                        <input type="text" maxlength="32" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.ItemType)' name="ItemType" id="ItemType">
                        <span class="red_mark">*</span><span id="ItemTypeTip"></span>
                    </td>
                    <td class="lbl">@Html.LabelFor(model => model.ParentCode) </td>
                    <td>
                        @Html.DropDownListFor(model => model.ParentCode, ViewData["parentList"] as List<SelectListItem>)
                        <span id="ParentCodeTip"></span>
                    </td>
                </tr> 
                <tr>
                    <td class="lbl">@Html.LabelFor(model => model.Remark) </td>
                    <td>
                        <input type="text" maxlength="50" autocomplete="off" class="txt" value='@Html.ValueFor(model => model.Remark)' name="Remark" id="Remark">
                        <span id="RemarkTip"></span>
                    </td>
                </tr>
            </tbody>

        </table>
        <div class="btn_line">
            <input type="button" id="okBtn" value="确定" class="btn_blue" />
            <input type="button" id="cancelBtn" value="取消" class="btn_gray" />
        </div>
    }

</div>
<script type="text/javascript">
    upms.history.go("cancelBtn");// 取消按钮
    upms.handlebtn.submit({// 确定batch
        btnid: "okBtn",
        url: '@Url.Action("SubmitDictAdd", "Agency")',
        params: [
                { name: "recordId", targetid: "recordId", type: "text" },
                { name: "ItemCode", targetid: "ItemCode", type: "text" },
                { name: "ItemName", targetid: "ItemName", type: "text" },
                { name: "ItemType", targetid: "ItemType", type: "text" },
                { name: "Remark", targetid: "Remark", type: "text" },
                { name: "ParentCode", targetname: "ParentCode", type: "select" }
        ],
        validate: {
            model: "batch",
            params: [
                {
                    targetid: "ItemCode", type: "text", infoid: "ItemCodeTip", checkarray: [{ falsetip: "字典编码不能为空!", oncheck: upms.checkUtils.isNotEmptyStr }]
                },
                { targetid: "ItemName", type: "text", infoid: "ItemNameTip", falsetip: "字典名称不能为空!", oncheck: upms.checkUtils.isNotEmptyStr },
                { targetid: "ItemType", type: "text", infoid: "ItemTypeTip", falsetip: "字典类型不能为空!", oncheck: upms.checkUtils.isNotEmptyStr }
            ]
        }
    });
</script>

